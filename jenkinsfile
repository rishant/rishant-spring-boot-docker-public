pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-jenkins-up')
    }

    triggers {
        pollSCM 'H/10 * * * *'
    }

    stages {

        stage('Checkout Source Code SCM') {
            steps {
                bat 'echo "Checking out SCM.."'
                bat "echo $GRADLE_HOME"
                bat "echo $PATH"
                checkout scm
            }
        }

        stage('Build Source Code') {
            steps {
                bat 'echo "Checking out SCM.."'
                bat './gradlew --version'
                /*bat './gradlew assemble'*/
                /*bat "./gradlew clean build -x test --refresh - dependencies"*/
                bat "./gradlew clean build -x test"
                /*bat "./gradlew checkstyle:checkstyle"*/
            }
        }

        stage('Junit Testing') {
            steps {
                bat './gradlew test'
            }
        }

        /*
        stage('Code Analysis') {
            steps {
                script {
                    bat "./gradlew sonar:sonar -Dsonar.host.url=http://sonarqube:9000  -DskipTests=true"
                }
            }
        }
        */

        /*
        stage('Archive App') {
            steps {
              bat "./gradlew deploy -DskipTests=true -P nexus3"
            }
        }*/

        stage('Dockerization') {
            steps {
                bat 'echo "Generating docker image..."'
            }
        }

        stage('Build Docker Image') {
            steps {
                bat 'docker build -t rishantgupta/spring-boot-docker-sample.jar:latest .'   
            }
        }
	
        stage('Login') {
            steps {
		bat 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin https://hub.docker.com/v2/users/login'
            }
        }
	
        stage('Push') {
            steps {
	    	//withDockerRegistry([ credentialsId: "dockerhub-jenkins-up", url: "https://index.docker.io/v1/" ]){            
	                bat 'docker push rishantgupta/spring-boot-docker-sample.jar:latest'
		//}
            }
        }
    }
    post {
        always {
            bat 'docker logout'
        }
    }
}
